#!/usr/bin/env node

// Module dependencies.
var app     = require('../app');
var debug   = require('debug')('loginapp:server');
var http    = require('http');

// Get port from environment and store in Express.
var port = normalizePort(process.env.PORT || '8080');

// Set Host and Port
//app.set('host', 'localhost');
app.set('port', port);

// Create Secure server and pass request handler.
var server = http.createServer(app);

// Listen on provided port, on all network interfaces.
server.listen(port, function () {
  debug('Listening on port:' + server.address().port);
});

// Error Listeners
server.addListener("error", onError);

// Normalize a port into a number, string, or false.
function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

// Event listener for HTTP server "error" event.
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}
